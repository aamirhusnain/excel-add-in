{"version":3,"file":"taskpane.js","mappings":"kDAEAA,EAAOC,QAAU,SAAUC,EAAKC,GAM9B,OALKA,IAEHA,EAAU,CAAC,GAGRD,GAKLA,EAAME,OAAOF,EAAIG,WAAaH,EAAII,QAAUJ,GAExCC,EAAQI,OAEVL,GAAOC,EAAQI,MAGbJ,EAAQK,iBAAmB,oBAAoBC,KAAKP,GAC/C,IAAKQ,OAAOR,EAAK,KAGnBA,GAfEA,CAgBX,C,4JCxBIS,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAab,QAGrB,IAAID,EAASW,EAAyBE,GAAY,CAGjDZ,QAAS,CAAC,GAOX,OAHAe,EAAoBH,GAAUb,EAAQA,EAAOC,QAASW,GAG/CZ,EAAOC,OACf,CAGAW,EAAoBK,EAAID,ECxBxBJ,EAAoBM,EAAI,SAASlB,GAChC,IAAImB,EAASnB,GAAUA,EAAOK,WAC7B,WAAa,OAAOL,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAY,EAAoBQ,EAAED,EAAQ,CAAEE,EAAGF,IAC5BA,CACR,ECNAP,EAAoBQ,EAAI,SAASnB,EAASqB,GACzC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEvB,EAASsB,IAC5EE,OAAOC,eAAezB,EAASsB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAX,EAAoBiB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBtB,EAAoBY,EAAI,SAASW,EAAKC,GAAQ,OAAOX,OAAOY,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,E,WCAtG,IAAII,EACA5B,EAAoBiB,EAAEY,gBAAeD,EAAY5B,EAAoBiB,EAAEa,SAAW,IACtF,IAAIC,EAAW/B,EAAoBiB,EAAEc,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,IAAMT,GAAWA,EAAYM,EAAQG,KAAKJ,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIU,MAAM,yDAChCV,EAAYA,EAAUW,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFvC,EAAoBwC,EAAIZ,C,IClBxB5B,EAAoByC,EAAIV,SAASW,SAAWC,KAAKb,SAASc,KCQ1DC,OAAOC,SAAQ,WAGb,I,gDCTEC,EAA6B,IAAIC,IAAI,cACrCC,EAA6B,IAAID,IAAI,cAEH,IAAyCD,GACzC,IAAyCE,E","sources":["webpack://excel-custom-functions-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/compat get default export","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t41: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  //document.getElementById(\"sideload-msg\").style.display = \"none\";\n  //document.getElementById(\"app-body\").style.display = \"flex\";\n  //document.getElementById(\"run\").onclick = run;\n});\n\n/*\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      \n      // Insert your Excel code here\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n*/\n\n// Function to replace formulas with values\nfunction replaceFormulasWithValues() {\n  return new Promise(function (resolve, reject) {\n    Excel.run(function (context) {\n      var sheet = context.workbook.worksheets.getActiveWorksheet();\n      var range = sheet.getUsedRange();\n      range.load([\"formulas\", \"values\"]);\n\n      return context.sync().then(function () {\n        var formulas = range.formulas;\n        console.log(\"formulas\", formulas);\n        var values = range.values;\n        var count = 0;\n\n        if (!formulas) {\n          console.log(\"No formulas found in the range.\");\n          resolve(count);\n        }\n\n        console.log(formulas.length,formulas[0].length)\n        for (var i = 0; i < formulas.length; i++) {\n          for (var j = 0; j < formulas[i].length; j++) {\n            var formula = formulas[i][j];\n            console.log(\"formula\",formula)\n            if (typeof formula === \"string\" && formula.includes(\"FORMULABOT.\")) {\n              var value = values[i][j];\n              range.getCell(i, j).values = [[value]];\n              count++;\n            }\n          }\n        }\n        resolve(count);\n      });\n    })\n      .then(function (count) {\n        console.log(\"Replaced \" + count + \" formulas with values.\");\n        // Perform any further actions if needed\n      })\n      .catch(function (error) {\n        console.error(error);\n        reject(\"Error: \" + error);\n      });\n  });\n}\n\nasync function loginFunc() {\n  return new Promise(function (resolve, reject) {\n    var email = document.querySelector(\"#email\").value;\n    var password = document.querySelector(\"#password\").value;\n    if (email == \"\" || password == \"\") {\n      updateBtn(\"#login\", \"Fill Input Field!\", \"Login\");\n      reject(new Error(\"Fill Input Field!\"));\n      return;\n    }\n    document.getElementById(\"login\").innerText = \"Logging In...\";\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      email: email,\n      password: password,\n    });\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n\n    fetch(\"https://formulabot.com/api/1.1/wf/login/\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => {\n        var resp = JSON.parse(result);\n        if (resp.status == \"success\") {\n          localStorage.setItem(\"token\", resp.response.token);\n          loginHandle(resp);\n          resolve(resp);\n        } else if (resp.reason === \"INVALID_LOGIN_CREDENTIALS\") {\n          updateBtn(\"#login\", \"Invalid Email/Password\", \"Login\");\n          reject(new Error(\"Invalid Email/Password\"));\n        } else {\n          reject(new Error(\"Login failed\"));\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n        delayedMessage();\n      });\n  });\n}\n\nfunction loginHandle(res) {\n  if (res.status === \"success\") {\n    if (res.response.subscription) {\n      $(\"#login\").text(\"Login\");\n      $(\"#email\").val(\"\");\n      $(\"#password\").val(\"\");\n      $(\"#loginScr\").css(\"display\", \"none\");\n      $(\"#mainScr\").css(\"display\", \"block\");\n      $(\"#loadScr\").css(\"display\", \"none\");\n    } else {\n      $(\"#loginScr\").css(\"display\", \"block\");\n      $(\"#mainScr\").css(\"display\", \"none\");\n      $(\"#loadScr\").css(\"display\", \"none\");\n      updateBtn(\"#login\", \"Inactive Subscription\", \"Login\");\n    }\n  } else {\n    updateBtn(\"#login\", res.message, \"Login\");\n  }\n}\n\nfunction getActiveRange() {\n  return new Promise(function(resolve, reject) {\n    Excel.run(function(context) {\n      var selectedRange = context.workbook.getSelectedRange();\n      selectedRange.load(\"address\");\n\n      return context.sync().then(function() {\n        var rangeA1Notation = selectedRange.address;\n        resolve(rangeA1Notation);\n      });\n    }).catch(function(error) {\n      reject(error);\n    });\n  });\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>excelformulabot</title> <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" integrity=\\\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\\\" crossorigin=\\\"anonymous\\\"> <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\\\" integrity=\\\"sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A==\\\" crossorigin=\\\"anonymous\\\" referrerpolicy=\\\"no-referrer\\\"/> <\" + \"script src=\\\"https://cdn.tailwindcss.com\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\\\" integrity=\\\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\\\" crossorigin=\\\"anonymous\\\"><\" + \"/script> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <\" + \"script src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\"><\" + \"/script> </head> <body> <header class=\\\"bg-light mb-4\\\"> <div class=\\\"container-fluid\\\"> <div class=\\\"row\\\"> <div class=\\\"col\\\"> <img src=\\\"https://d1muf25xaso8hp.cloudfront.net/https%3A%2F%2Fe1b5c549a6dd5273e224cd87b24dd3fb.cdn.bubble.io%2Ff1683076870037x820209632778554600%2FTransparent%2520Black.png?w=256&h=51&auto=compress&dpr=1&fit=max\\\" alt=\\\"Logo\\\" class=\\\"mt-1 w-75\\\"> </div> <div class=\\\"col-auto d-flex align-items-center\\\"> <button class=\\\"btn btn-light\\\" id=\\\"logout\\\"> <i class=\\\"fas fa-power-off\\\"></i> </button> </div> </div> </div> <div class=\\\"container d-flex justify-content-between align-items-center py-2\\\"> <button class=\\\"btn btn-light btn-lg px-2\\\" id=\\\"back-button\\\" style=\\\"display:none\\\"> <i class=\\\"fas fa-arrow-left\\\"></i> </button> <span class=\\\"h2 text-center m-0 w-100\\\" id=\\\"header-label\\\" style=\\\"display:none\\\">I want to...</span> <div></div> </div> </header> <div id=\\\"loadScr\\\" class=\\\"bg-gray-300 fixed top-0 left-0 w-full h-full\\\" style=\\\"display:none\\\"> <div class=\\\"loadHolder mt-[12rem] ml-[5.5rem]\\\"> <div class=\\\"loader\\\"></div> </div> </div> <div class=\\\"container\\\" id=\\\"loginScr\\\" style=\\\"display:none\\\"> <div class=\\\"row small\\\"><span style=\\\"font-size:80%\\\"> <strong>Welcome to Formula Bot! (larger text than below)</strong><br>- Translate your text instructions to <strong>generate</strong> Excel formulas within seconds with the help of AI. <br>- Receive <strong>explanations</strong> for complex formulas. <br>- <strong>Classify</strong> text from a list into multiple categories <br>- <strong>Extract</strong> specific information from text <br>- Determine the <strong>sentiment</strong> of text, like if it's positive, negative or neutral <br>- Retrieve <strong>information</strong> about about...anything <br>- Type <strong>anything</strong>, get anything <br>- Insert examples of inputs and outputs to <strong>infer</strong> additional inputs in which you don't have an output. </span> </div> <label class=\\\"mt-3 ml-4\\\">Email:</label> <div class=\\\"mt-1\\\" style=\\\"text-align:-webkit-center\\\"> <input placeholder=\\\"Email\\\" id=\\\"email\\\" class=\\\"form-control w-[90%]\\\"/> </div> <label class=\\\"mt-3 ml-4\\\">Password:</label> <div class=\\\"mt-1\\\" style=\\\"text-align:-webkit-center\\\"> <input type=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" class=\\\"form-control w-[90%]\\\"/> </div> <div class=\\\"mt-3\\\" style=\\\"text-align:-webkit-center\\\"> <button class=\\\"btn btn-secondary bg-[#0C4D78] hover:bg-[#063c61] active:bg-[#063c61] focus:bg-[#063c61] w-200\\\" id=\\\"login\\\">Login</button> <div class=\\\"text-center ml-4\\\"> <a href=\\\"http://www.formulabot.com/?utm_source=googlesheets&utm_medium=addon\\\" target=\\\"blank\\\">Sign up for free!</a> </div> </div> <div class=\\\"text-center position-absolute bottom-2\\\"> <p>Experiencing issues? Contact <a href=\\\"mailto:hello@formulabot.com\\\">hello@formulabot.com</a></p> </div> </div> <main> <div class=\\\"container-fluid h-100\\\" id=\\\"mainScr\\\" style=\\\"display:none\\\"> <div class=\\\"row h-100\\\"> <div class=\\\"btn-section-content d-none\\\" id=\\\"generate-formula-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <textarea type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"txtGenerateInput\\\" rows=\\\"3\\\" placeholder=\\\"Input your text instructions here to generate a formula\\\"></textarea> </div> </div> <div class=\\\"row py-3\\\"> <div class=\\\"col-12\\\"> <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-lg w-100\\\" id=\\\"btnSubmitGenerate\\\">Submit</button> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <textarea type=\\\"text\\\" class=\\\"form-control form-control-lg mb-3 mb-md-0\\\" id=\\\"txtGenerateOutput\\\" rows=\\\"3\\\" placeholder=\\\"Formula will show here\\\"></textarea> </div> </div> <div class=\\\"row mt-3\\\"> <div class=\\\"col-5\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary w-100\\\" id=\\\"btnCopyGenerate\\\">Copy</button> </div><div class=\\\"col-7\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success w-100\\\" id=\\\"btnInsertGenerate\\\">Insert in cell</button> </div> </div> <div class=\\\"row py-1 mt-2\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"explain-formula-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <textarea type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"txtExplainInput\\\" rows=\\\"3\\\" placeholder=\\\"Input your formula here to have it explained\\\"></textarea> </div> </div> <div class=\\\"row py-3\\\"> <div class=\\\"col-12\\\"> <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-lg w-100\\\" id=\\\"btnSubmitExplain\\\">Submit</button> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <textarea type=\\\"text\\\" class=\\\"form-control form-control-lg mb-3 mb-md-0\\\" id=\\\"txtExplainOutput\\\" rows=\\\"3\\\" placeholder=\\\"Explanation will show here\\\"></textarea> </div> </div> <div class=\\\"row mt-3\\\"> <div class=\\\"col-5\\\"> <button type=\\\"button\\\" class=\\\"btn btn-primary w-100\\\" id=\\\"btnCopyExplain\\\">Copy</button> </div><div class=\\\"col-7\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success w-100\\\" id=\\\"btnInsertExplain\\\">Insert in cell</button> </div> </div> <div class=\\\"row py-1 mt-2\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"classify-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5 lh-sm\\\">Classify<br/><small>(Input Cell)</small></div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-warning bg-gradient border-0\\\" id=\\\"txtClassifyType\\\" placeholder=\\\"Company\\\"> </div> </div> </div> <div class=\\\"row text-center mt-4 py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5\\\">in cell</div> </div> </div> <div class=\\\"row text-center py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-gradient border-0\\\" style=\\\"background-color:#761d514c\\\" id=\\\"txtClassifyRange\\\" placeholder=\\\"B2\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light get-active-range\\\"> <i class=\\\"fa-sharp fa-solid fa-table-cells-large\\\"></i> </button> </div> </div> </div> <div class=\\\"row text-center mt-4 py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5\\\">based on</div> </div> </div> <div class=\\\"row text-center py-1\\\"> <div class=\\\"col-12\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-gradient border-0\\\" style=\\\"background-color:#38761d4c\\\" id=\\\"txtClassifyBasedOn\\\" placeholder=\\\"industry\\\"> </div> </div> <div class=\\\"row text-center mt-4 py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5\\\">into one of the following groups</div> </div> </div> <div id=\\\"txtClassifyCategories\\\"> <div class=\\\"row py-1\\\"> <div class=\\\"col-sm-12 col-md\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" placeholder=\\\"Tech\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light delete-field\\\"> <i class=\\\"fas fa-trash\\\"></i> </button> </div> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col-sm-12 col-md\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" placeholder=\\\"Retail\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light delete-field\\\"> <i class=\\\"fas fa-trash\\\"></i> </button> </div> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col-12\\\"> <a class=\\\"text-center text-decoration-none fs-5\\\" href=\\\"#\\\" id=\\\"add-field\\\">(+) Add</a> </div> </div> </div> <div class=\\\"row mt-4\\\"> <div class=\\\"col-12\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg w-100\\\" id=\\\"btnInsertClassify\\\">Insert in cell</button> </div> </div> <div class=\\\"row py-1 mt-2\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"extract-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5\\\">Extract the</div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0 cell-range\\\" id=\\\"txtExtractDescription\\\" placeholder=\\\"third word\\\"> </div> </div> <div class=\\\"row text-center mt-4 py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5 lh-sm\\\">from<br/><small>(Input Cell)</small></div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-warning bg-gradient border-0\\\" id=\\\"txtExtractRange\\\" placeholder=\\\"B2\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light get-active-range\\\"> <i class=\\\"fa-sharp fa-solid fa-table-cells-large\\\"></i> </button> </div> </div> </div> <div class=\\\"row mt-4\\\"> <div class=\\\"col-12\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg w-100\\\" id=\\\"btnInsertExtract\\\">Insert in cell</button> </div> </div> <div class=\\\"row py-1 mt-2\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"analyze-sentiment-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5 lh-sm\\\">Analyze sentiment of<br/><small>(Input Cell)</small></div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-warning bg-gradient border-0\\\" id=\\\"txtSentimentRange\\\" placeholder=\\\"B2\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light get-active-range\\\"> <i class=\\\"fa-sharp fa-solid fa-table-cells-large\\\"></i> </button> </div> </div> </div> <div class=\\\"row text-center mt-4 py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5\\\">as one of the following</div> </div> </div> <div id=\\\"txtSentimentCategories\\\"> <div class=\\\"row py-1\\\"> <div class=\\\"col-sm-12 col-md\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" placeholder=\\\"Positive\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light delete-field\\\"> <i class=\\\"fas fa-trash\\\"></i> </button> </div> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col-sm-12 col-md\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" placeholder=\\\"Negative\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light delete-field\\\"> <i class=\\\"fas fa-trash\\\"></i> </button> </div> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col-sm-12 col-md\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" placeholder=\\\"Neutral\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light delete-field\\\"> <i class=\\\"fas fa-trash\\\"></i> </button> </div> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col-12\\\"> <a class=\\\"text-center text-decoration-none fs-5\\\" href=\\\"#\\\" id=\\\"add-field\\\">(+) Add</a> </div> </div> </div> <div class=\\\"row mt-4\\\"> <div class=\\\"col-12\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg w-100\\\" id=\\\"btnInsertSentiment\\\">Insert in cell</button> </div> </div> <div class=\\\"row py-1 mt-2\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"retrieve-info-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5\\\">Give me the</div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" id=\\\"txtRetrieveDescription\\\" placeholder=\\\"Population\\\"> </div> </div> <div class=\\\"row text-center mt-4 py-1\\\"> <div class=\\\"col-12\\\"> <div class=\\\"text-center fs-5 lh-sm\\\">of<br/><small>(Input Cell)</small></div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div class=\\\"input-group input-group-append\\\"> <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-warning bg-gradient border-0\\\" id=\\\"txtRetrieveRange\\\" placeholder=\\\"C10\\\"> <button type=\\\"button\\\" class=\\\"btn btn-light get-active-range\\\"> <i class=\\\"fa-sharp fa-solid fa-table-cells-large\\\"></i> </button> </div> </div> </div> <div class=\\\"row mt-4\\\"> <div class=\\\"col-12\\\"> <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg w-100\\\" id=\\\"btnInsertRetrieve\\\">Insert in cell</button> </div> </div> <div class=\\\"row py-1 mt-2\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"freeform-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div>The <span class=\\\"fw-bolder\\\">=FORMULABOT.FREEFORM</span> formula lets you type in anything, allowing you to fully customize the response.<br><br>Make sure to be as specific as possible. If you do not get the desired results, try again. </div> </div> </div> <div class=\\\"row mt-3\\\"> <div class=\\\"col-12\\\"> <div class=\\\"fw-bolder\\\">Examples:</div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div>=FORMULABOT.FREEFORM( <span class=\\\"text-green\\\">“Write me a thank you note to ”,</span> <span class=\\\"text-orange\\\">B10</span> <span class=\\\"text-green\\\">,“for gifting me a”,</span> <span class=\\\"text-orange\\\">C10</span>) </div> </div> </div> <div class=\\\"row mt-2\\\"> <div class=\\\"col-12\\\"> <div>=FORMULABOT.FREEFORM( <span class=\\\"text-green\\\">“Write me an article about SEO”</span> ) </div> </div> </div> </div> </div> <div class=\\\"btn-section-content d-none\\\" id=\\\"infer-section\\\"> <div class=\\\"container\\\"> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <div>The <span class=\\\"fw-bolder\\\">=FORMULABOT.INFER</span> formula allows you to insert examples of inputs and outputs to infer additional inputs in which you don't have an output. For example, let's say you have a list of companies in cells A1 to A5 and their respective competitors in B1 to B5 and you have another company in A6 in which you don't know its competitor. The formula you'd use is:<br/><strong>=FORMULABOT.INFER(A1:A5,B1:B5,A6)</strong> </div> </div> </div> <div class=\\\"row mt-3\\\"> <div class=\\\"col-12\\\"> <div class=\\\"fw-bolder\\\">Examples:</div> </div> </div> <div class=\\\"row\\\"> <div class=\\\"col-12\\\"> <img src=\\\"https://e1b5c549a6dd5273e224cd87b24dd3fb.cdn.bubble.io/f1683555077821x914146478826124900/infer.png\\\" alt=\\\"Logo\\\" class=\\\"mt-1 img-fluid\\\"> </div> </div> </div> </div> </div> </div> <div class=\\\"container\\\" id=\\\"home-section\\\"> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section btn-lg w-100\\\" id=\\\"generate-formula-button\\\"> <div class=\\\"fw-bold section-label\\\">Generate Formula</div> <div class=\\\"text-muted section-sublabel\\\">Generate a formula based on text instructions</div> </button> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section btn-lg w-100\\\" id=\\\"explain-formula-button\\\"> <div class=\\\"fw-bold section-label\\\">Explain Formula</div> <div class=\\\"text-muted section-sublabel\\\">Input a formula to have it explained for you</div> </button> </div> </div> <fieldset class=\\\"border rounded-3 my-2 px-2 pt-0 pb-2\\\"> <legend class=\\\"float-none w-auto px-4\\\" style=\\\"font-size:16px\\\">Data Prep Toolkit</legend> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section-advanced btn-lg w-100\\\" id=\\\"classify-button\\\"> <div class=\\\"fw-bold section-label\\\">Classify</div> <div class=\\\"text-muted section-sublabel\\\">Classify information into multiple categories</div> </button> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section-advanced btn-lg w-100\\\" id=\\\"extract-button\\\" style=\\\"background-color:#00f\\\"> <div class=\\\"fw-bold section-label\\\">Extract</div> <div class=\\\"text-muted section-sublabel\\\">Pull out specific information from a text</div> </button> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section-advanced btn-lg w-100\\\" id=\\\"analyze-sentiment-button\\\"> <div class=\\\"fw-bold section-label\\\">Analyze Sentiment</div> <div class=\\\"text-muted section-sublabel\\\">Determine the sentiment of text, like if it's positive or negative</div> </button> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section-advanced btn-lg w-100\\\" id=\\\"retrieve-info-button\\\"> <div class=\\\"fw-bold section-label\\\">Retrieve Information</div> <div class=\\\"text-muted section-sublabel\\\">Populate information about anything (i.e. a state's capital)</div> </button> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section-advanced btn-lg w-100\\\" id=\\\"freeform-button\\\"> <div class=\\\"fw-bold section-label\\\">Freeform</div> <div class=\\\"text-muted section-sublabel\\\">Customize your response by typing anything you want</div> </button> </div> </div> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-section-advanced btn-lg w-100\\\" id=\\\"infer-button\\\"> <div class=\\\"fw-bold section-label\\\">Infer</div> <div class=\\\"text-muted section-sublabel\\\">Provide examples of data to infer an output for select inputs</div> </button> </div> </div> </fieldset> <div class=\\\"row py-1\\\"> <div class=\\\"col\\\"> <button type=\\\"button\\\" class=\\\"btn btn-home-paste btn-lg w-100\\\" id=\\\"btnPasteValues\\\"> <div class=\\\"fw-bolder section-label\\\">IMPORTANT!</div> <div class=\\\"section-sublabel\\\" style=\\\"color:#e1dbdb\\\">Click this button to convert your responses to values on the sheet. Not doing so will result in additional requests incurring when the page is reloaded.</div> </button> </div> </div> </div> </main> <div class=\\\"modal fade\\\" id=\\\"modalSpinningWheel\\\" data-bs-backdrop=\\\"static\\\" data-bs-keyboard=\\\"false\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\"> <div class=\\\"modal-dialog modal-dialog-centered\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> </div> <div class=\\\"modal-body text-center\\\"> <div class=\\\"d-flex justify-content-center\\\"> <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\"> <span class=\\\"visually-hidden\\\">Loading...</span> </div> </div> <div>Please wait while we process your request...</div> <div class=\\\"small fst-italic text-secondary\\\">(Don't click buttons or try to close this as it could interupt the request.)</div> </div> </div> </div> </div>  <\" + \"script src=\\\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.5.1.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\\\"><\" + \"/script> <\" + \"script>var section_labels={\\\"generate-formula-section\\\":\\\"Generate Formula\\\",\\\"explain-formula-section\\\":\\\"Explain Formula\\\",\\\"classify-section\\\":\\\"Classify\\\",\\\"extract-section\\\":\\\"Extract\\\",\\\"analyze-sentiment-section\\\":\\\"Analyze Sentiment\\\",\\\"retrieve-info-section\\\":\\\"Retrieve Info\\\",\\\"freeform-section\\\":\\\"Freeform\\\",\\\"infer-section\\\":\\\"Infer\\\"};function updateBtn(t,e,n){console.log(\\\"selector\\\",t,\\\"msg\\\",e,\\\"org\\\",n),$(t).text(e),setTimeout((()=>{$(t).text(n)}),3e3)}async function isLoggedIn(){return activeState=localStorage.getItem(\\\"token\\\"),console.log(\\\"activeState\\\",activeState),activeState?($(\\\"#loginScr\\\").hide(),$(\\\"#mainScr\\\").show(),$(\\\"#home-section\\\").show(),$(\\\"#header-label\\\").show(),void $(\\\"#loadScr\\\").hide()):($(\\\"#loginScr\\\").show(),$(\\\"#mainScr\\\").hide(),$(\\\"#home-section\\\").hide(),$(\\\"#header-label\\\").hide(),void $(\\\"#loadScr\\\").hide())}function delay(t){return new Promise((e=>setTimeout(e,1e3*t)))}function copyFunc(){var t=document.querySelector(\\\"#output\\\");navigator.clipboard.writeText(t.value),updateBtn(\\\"#copy\\\",\\\"Copied!\\\",\\\"Copy\\\")}function updateBtn(t,e,n){var o=document.querySelector(t);o.innerText=e,setTimeout((()=>{o.innerText=n}),2e3)}function insertCellClientSide(t){try{Excel.run((function(e){let n=e.workbook.getSelectedRange();return n.load(\\\"address\\\"),e.sync().then((function(){return n.values=[[t]],e.sync()}))}))}catch(t){console.error(t)}}async function callAPI(t,e){var n=localStorage.getItem(\\\"token\\\");console.log(n);try{const a=\\\"https://formulabot.com/api/1.1/wf/\\\"+t,l={method:\\\"POST\\\",headers:{Authorization:`Bearer ${n}`,\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify(e)};console.log(\\\"CALL API OPTIONS\\\",a,l);var o=await fetch(a,l);console.log(o);var i=await o.json();return console.log(\\\"CALL API RESP\\\",i),i?.response?.output??\\\"No Result Found\\\"}catch(t){return\\\"No Result Found \\\"+t}}Office.onReady((async t=>{t.host===Office.HostType.Excel&&(await isLoggedIn(),$(\\\"body\\\").on(\\\"click\\\",\\\".btn-section, .btn-section-advanced\\\",(async function(t){const e=$(\\\".btn-section-content\\\");console.log(e),e.addClass(\\\"d-none\\\"),$(\\\"#home-section\\\").addClass(\\\"d-none\\\");var n=\\\"\\\";if($(t.target).is(\\\"button\\\"))n=$(t.target).attr(\\\"id\\\");else{n=$(t.target).closest('button[id$=\\\"-button\\\"]').attr(\\\"id\\\")}const o=n.replace(\\\"button\\\",\\\"section\\\"),i=$(\\\"#\\\"+o);console.log(\\\"sectionId\\\",t.target.id,\\\"activeSection\\\",i),i.removeClass(\\\"d-none\\\"),console.log(\\\"sectionId\\\",o,\\\"Header\\\",section_labels[o]),$(\\\"#header-label\\\").text(section_labels[o]),window.scrollTo(0,0),$(\\\"#back-button\\\").show()})))})),$(\\\"body\\\").on(\\\"click\\\",\\\"#back-button\\\",(async function(t){$('div[id$=\\\"section\\\"]').addClass(\\\"d-none\\\"),$(\\\"#header-label\\\").text(\\\"I want to...\\\"),$(\\\"#home-section\\\").removeClass(\\\"d-none\\\"),$(\\\"#back-button\\\").hide()})),$(document).on(\\\"click\\\",\\\".get-active-range\\\",(async function(){const t=await getActiveRange();var e=$(this).closest(\\\".input-group\\\").find(\\\"input\\\");$(e).val(t)})),$(\\\"body\\\").on(\\\"click\\\",\\\"#add-field\\\",(function(t){$('\\\\n          <div class=\\\"row py-1\\\">\\\\n            <div class=\\\"col-sm-12 col-md\\\">\\\\n              <div class=\\\"input-group input-group-append\\\">\\\\n                <input type=\\\"text\\\" class=\\\"form-control form-control-lg bg-category bg-gradient border-0\\\" value=\\\"New category\\\">\\\\n                <button type=\\\"button\\\" class=\\\"btn btn-light delete-field\\\">\\\\n                  <i class=\\\"fas fa-trash\\\"></i>\\\\n                </button>\\\\n              </div>\\\\n            </div>\\\\n          </div>\\\\n        ').insertBefore($(this).closest(\\\".row\\\"))})),$(document).on(\\\"click\\\",\\\".delete-field\\\",(function(){$(this).closest(\\\".row\\\").remove()})),$(document).on(\\\"click\\\",\\\"#btnInsertGenerate\\\",(async function(){const t=$(\\\"#txtGenerateOutput\\\").val();await insertCellClientSide(t)})),$(document).on(\\\"click\\\",\\\"#btnInsertExplain\\\",(async function(){const t=$(\\\"#txtExplainOutput\\\").val();console.log(\\\"output\\\",t),await insertCellClientSide(t)})),$(document).on(\\\"click\\\",\\\"#btnInsertClassify\\\",(async function(){const t=$(\\\"#txtClassifyType\\\").val(),e=$(\\\"#txtClassifyRange\\\").val(),n=$(\\\"#txtClassifyBasedOn\\\").val();var o=[];$(\\\"#txtClassifyCategories input\\\").each((function(){\\\"\\\"!=$(this).val()&&o.push($(this).val().toString())}));const i=`=FORMULABOT.CLASSIFY(\\\"${t}\\\", ${e}, \\\"${n}\\\", \\\"${o=o.filter((t=>\\\"\\\"!=t)).join('\\\",\\\"')}\\\")`;await insertCellClientSide(i)})),$(document).on(\\\"click\\\",\\\"#btnInsertExtract\\\",(async function(){const t=`=FORMULABOT.EXTRACT(${$(\\\"#txtExtractRange\\\").val()},\\\"${$(\\\"#txtExtractDescription\\\").val()}\\\")`;await insertCellClientSide(t)})),$(document).on(\\\"click\\\",\\\"#btnInsertSentiment\\\",(async function(){const t=$(\\\"#txtSentimentRange\\\").val();var e=[];$(\\\"#txtSentimentCategories input\\\").each((function(){e.push($(this).val())})),console.log(\\\"categories\\\",e);const n=`=FORMULABOT.SENTIMENT(${t},\\\"${e=e.filter((t=>\\\"\\\"!=t)).join('\\\",\\\"')}\\\")`;await insertCellClientSide(n)})),$(document).on(\\\"click\\\",\\\"#btnInsertRetrieve\\\",(async function(){const t=`=FORMULABOT.INFO(${$(\\\"#txtRetrieveRange\\\").val()},\\\"${$(\\\"#txtRetrieveDescription\\\").val()}\\\")`;await insertCellClientSide(t)})),$(document).on(\\\"click\\\",\\\"#btnSubmitGenerate\\\",(async function(){try{var t=$(\\\"#txtGenerateInput\\\").val();$(\\\"#modalSpinningWheel\\\").modal(\\\"show\\\");const e={input:t.toString(),platform:\\\"Google Sheets Add-in\\\",outputType:\\\"Formula\\\"},n=await callAPI(\\\"output\\\",e);console.log(\\\"btnSubmitGenerate result\\\",n),$(\\\"#txtGenerateOutput\\\").val(n),$(\\\"#modalSpinningWheel\\\").modal(\\\"hide\\\")}catch(t){console.error(t)}})),$(document).on(\\\"click\\\",\\\"#btnSubmitExplain\\\",(async function(){try{var t=$(\\\"#txtExplainInput\\\").val();$(\\\"#modalSpinningWheel\\\").modal(\\\"show\\\");const e={input:t.toString(),platform:\\\"Excel Add-in\\\",outputType:\\\"Explain\\\"},n=await callAPI(\\\"output\\\",e);console.log(\\\"btnSubmitExplain result\\\",n),$(\\\"#txtExplainOutput\\\").val(n),$(\\\"#modalSpinningWheel\\\").modal(\\\"hide\\\")}catch(t){console.error(t)}})),$(document).on(\\\"click\\\",\\\"#btnPasteValues\\\",(async function(){$(\\\"#modalSpinningWheel\\\").modal(\\\"show\\\");try{var t=await replaceFormulasWithValues();console.log(\\\"count\\\",t),await delay(.5),$(\\\"#modalSpinningWheel\\\").modal(\\\"hide\\\")}catch(t){console.error(t),$(\\\"#modalSpinningWheel\\\").modal(\\\"hide\\\")}})),$(document).on(\\\"click\\\",\\\"#btnCopyGenerate, #btnCopyExplain\\\",(async function(){var t=\\\"btnCopyGenerate\\\"==$(this).attr(\\\"id\\\")?$(\\\"#txtGenerateOutput\\\").val():$(\\\"#txtExplainOutput\\\").val();console.log(\\\"output\\\",t,\\\"#\\\"+$(this).attr(\\\"id\\\")),navigator.clipboard.writeText(t),updateBtn(\\\"#\\\"+$(this).attr(\\\"id\\\"),\\\"Copied!\\\",\\\"Copy\\\")})),$(document).on(\\\"click\\\",\\\"#login\\\",(async function(){var t=document.querySelector(\\\"#email\\\").value,e=document.querySelector(\\\"#password\\\").value;if(-1!=t.indexOf(\\\"@\\\")&&\\\"\\\"!=e){$(\\\"#login\\\").text(\\\"Logging In...\\\");try{const i=\\\"https://formulabot.com/api/1.1/wf/login/\\\",a={email:t,password:e};console.log(\\\"payload\\\",a);const l={method:\\\"POST\\\",headers:{\\\"Content-Type\\\":\\\"application/json\\\"},body:JSON.stringify(a)};console.log(\\\"CALL LOGIN OPTIONS\\\",i,l);var n=await fetch(i,l);console.log(n);var o=await n.json();return console.log(\\\"CALL LOGIN RESP\\\",o),\\\"success\\\"==o.status?(localStorage.setItem(\\\"token\\\",o.response.token),console.log(\\\"res.status\\\",o.status),1==o.response.subscription?($(\\\"#login\\\").text(\\\"Login\\\"),$(\\\"#email\\\").val(\\\"\\\"),$(\\\"#password\\\").val(\\\"\\\"),$(\\\"#loginScr\\\").hide(),$(\\\"#mainScr\\\").show(),$(\\\"#home-section\\\").show(),$(\\\"#header-label\\\").show(),$(\\\"#loadScr\\\").hide()):($(\\\"#header-label\\\").hide(),$(\\\"#loginScr\\\").show(),$(\\\"#mainScr\\\").hide(),$(\\\"#loadScr\\\").hide(),updateBtn(\\\"#login\\\",\\\"Inactive Subscription\\\",\\\"Login\\\"))):updateBtn(\\\"#login\\\",res.message,\\\"Login\\\"),\\\"INVALID_LOGIN_CREDENTIALS\\\"===o.reason?void updateBtn(\\\"#login\\\",\\\"Invalid Email/Password\\\",\\\"Login\\\"):o?.response?.output??\\\"No Result Found\\\"}catch(t){return\\\"No Result Found \\\"+t}}else updateBtn(\\\"#login\\\",\\\"Fill Input Field!\\\",\\\"Login\\\")})),$(document).on(\\\"click\\\",\\\"#logout\\\",(async function(){localStorage.removeItem(\\\"token\\\"),$(\\\"#loginScr\\\").show(),$(\\\"#mainScr\\\").hide(),$(\\\"#loadScr\\\").hide(),$(\\\"#input\\\").val(\\\"\\\"),$(\\\"#output\\\").val(\\\"\\\"),$(\\\"#home-section\\\").hide(),$(\\\"#header-label\\\").hide()}))<\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","Office","onReady","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}
